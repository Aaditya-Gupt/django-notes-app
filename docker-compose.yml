services:
  nginx:
    build:
      context: ./nginx
    container_name: "nginx"
    ports:
      - "80:80"
    networks:
      - notes-app
    restart: always
    depends_on:
      django:
        condition: service_healthy

  django:
    build:
      context: .
    container_name: "django"  # Renamed from django_cont to django
    command: sh -c "python manage.py migrate --no-input && gunicorn notesapp.wsgi --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - ".env"
    restart: always
    networks:
      - notes-app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

  db:
    image: mysql:latest
    container_name: "db_cont"
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_db
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - notes-app
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s

networks:
  notes-app:

volumes:
  mysql-data:

